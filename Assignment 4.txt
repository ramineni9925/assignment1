/* Assignment 4(a)
Give the menu to the user as the operation listed below on student table:
   1. Create 2. Read 3. Update 4. Delete
 */

package assignment4a;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Scanner;

public class JDBCCrudOperation {

	public static void main(String[] args) throws SQLException {

		Connection connection = null;
		Statement statement = null;
		ResultSet resultSet = null;
		Scanner sc = null;

		try {
			connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/practice", "root", "root1234");

			sc = new Scanner(System.in);
			System.out.println("Enter the DB operation you want to perform:");
			System.out.println("1 - Create");
			System.out.println("2 - Read");
			System.out.println("3 - Update");
			System.out.println("4 - Delete");
			int choice = sc.nextInt();

			if (connection != null) {
				statement = connection.createStatement();

				if (choice == 1 & statement != null) {
					System.out.println("[You have selected INSERT operation]");
					System.out.println("Enter accno: ");
					int saccno = sc.nextInt();
					System.out.println("Enter firstname: ");
					String sfirstname = sc.next();
					System.out.println("Enter lastname: ");
					String slastname = sc.next();
					System.out.println("Enter bal: ");
					int sbal = sc.nextInt();
					String sqlQuery = String.format(
							"insert into account(`accno`, `lastname`, `firstname`, `bal`) values(%d,'%s', '%s', %d)",
							saccno, slastname, sfirstname, sbal);
					int executeUpdate = statement.executeUpdate(sqlQuery);
					System.out.println("Number of rows affected=" + executeUpdate);

				}

				if (choice == 2 & statement != null) {
					System.out.println("[You have selected READ operation]");
					resultSet = statement.executeQuery("select accno, lastname, firstname, bal from account");

					if (resultSet != null) {
						System.out.println("================================");
						System.out.println("AccNo FirstName LastName Balance");
						System.out.println("================================");
						while (resultSet.next()) {
							int accno = resultSet.getInt("accno");
							String lastname = resultSet.getString("lastname");
							String firstname = resultSet.getString("firstname");
							int bal = resultSet.getInt("bal");
							System.out.println(accno + "\t" + firstname + "\t" + lastname + "\t" + bal);
						}
						System.out.println("================================");
					}
				}

				if (choice == 3 & statement != null) {
					System.out.println("[You have selected UPDATE operation]");
					System.out.println("Enter accno of customer of which you want to change the balance");
					int accno = sc.nextInt();
					System.out.println("Enter the new Balance of the customer");
					int bal = sc.nextInt();
					String sqlQuery = String.format("update account set bal=%d where accno=%d", bal, accno);
					int executeUpdate = statement.executeUpdate(sqlQuery);
					System.out.println("Number of rows affected=" + executeUpdate);
				}

				if (choice == 4 & statement != null) {
					System.out.println("[You have selected DELETE operation]");
					System.out.println("Enter accno of customer you want to delete");
					int accno = sc.nextInt();
					String sqlQuery = String.format("delete from account where accno=%d", accno);
					int executeUpdate = statement.executeUpdate(sqlQuery);
					System.out.println("Number of rows affected=" + executeUpdate);
				}
				if (choice <= 0 | choice > 4) {
					System.out.println("Wrong input, please try again!");
				}
				System.out.println("Thanks for using the JDBC Aplication :)");
			}
		} catch (SQLException s) {
			s.printStackTrace();
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			if (statement != null) {
				statement.close();
			}
			if (connection != null) {
				connection.close();
			}
			if (sc != null) {
				sc.close();
			}

		}

	}

}
------------------------
Perform Insertion Operation and also perform Retrieval operation on the following data:
   name    =>
   address =>
   gender  =>
   DOB     => dd-MM-yyyy
   DOJ     => MM-dd-yyyy
   DOM     => yyyy-MM-dd
 */

package assignment4b;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Scanner;

public class JDBCDateOperation {

	public static void main(String[] args) throws SQLException, ParseException {
		Connection connection = null;
		PreparedStatement pstmt = null;
		ResultSet resultSet = null;
		Scanner scanner = null;
		try {
			scanner = new Scanner(System.in);
			System.out.println("Which operation you want to perform in DB: ");
			System.out.println("1 - Insertion");
			System.out.println("2 - Retrieval");
			int choice = scanner.nextInt();

			connection = JdbcUtil.getJdbcConnection();

			if (connection != null & choice == 1) {
				System.out.println("[You have chosen INSERTION operation]");

				System.out.print("Enter Name: ");
				String sname = scanner.next();
				System.out.print("Enter Address: ");
				String saddress = scanner.next();
				System.out.print("Enter Gender (M/F): ");
				String sgender = scanner.next();
				System.out.print("Enter Date of Birth (dd-mm-yyyy): ");
				String sdob = scanner.next();
				System.out.print("Enter Date of Joining (mm-dd-yyyy): ");
				String sdoj = scanner.next();
				System.out.print("Enter Date of Marriage (yyyy-mm-dd): ");
				String sdom = scanner.next();

				// on DOB
				SimpleDateFormat sdfdob = new SimpleDateFormat("dd-MM-yyyy");
				java.util.Date utilDob = sdfdob.parse(sdob);
				long time = utilDob.getTime();
				java.sql.Date sqlDob = new java.sql.Date(time);

				// on DOJ
				SimpleDateFormat sdfdoj = new SimpleDateFormat("MM-dd-yyyy");
				java.util.Date utilDoj = sdfdoj.parse(sdoj);
				long time2 = utilDoj.getTime();
				java.sql.Date sqlDoj = new java.sql.Date(time2);

				// on DOM
				java.sql.Date sqlDom = java.sql.Date.valueOf(sdom);

				pstmt = connection.prepareStatement(
						"insert into userdetail(`name`, `address`, `gender`, `dob`, `doj`, `dom`) values(?, ?, ?, ?, ?, ?)");
				if (pstmt != null) {
					pstmt.setString(1, sname);
					pstmt.setString(2, saddress);
					pstmt.setString(3, sgender);
					pstmt.setDate(4, sqlDob);
					pstmt.setDate(5, sqlDoj);
					pstmt.setDate(6, sqlDom);
					int executeUpdate = pstmt.executeUpdate();
					System.out.println("Number of rows affected are: " + executeUpdate);
				}

			}
			if (connection != null & choice == 2) {
				System.out.println("[You have chosen RETRIEVAL operation]");
				System.out.print("Enter the name you want to get details of: ");
				String name = scanner.next();
				pstmt = connection.prepareStatement(
						"select `name`, `address`, `gender`, `dob`, `doj`, `dom` from userdetail where `name`=?");
				if (pstmt != null) {
					pstmt.setString(1, name);
					resultSet = pstmt.executeQuery();
				}
				if (resultSet != null) {
					if (resultSet.next()) {
						String sname = resultSet.getString(1);
						String saddress = resultSet.getString(2);
						String sgender = resultSet.getString(3);
						java.sql.Date sqldob = resultSet.getDate(4);
						java.sql.Date sqldoj = resultSet.getDate(5);
						java.sql.Date sqldom = resultSet.getDate(6);

						// For sqldob
						SimpleDateFormat sdfdob = new SimpleDateFormat("dd-MM-yyyy");
						String sdob = sdfdob.format(sqldob);

						// For sqldoj
						SimpleDateFormat sdfdoj = new SimpleDateFormat("MM-dd-yyyy");
						String sdoj = sdfdoj.format(sqldoj);

						// For sqldom
						SimpleDateFormat sdfdom = new SimpleDateFormat("yyyy-MM-dd");
						String sdom = sdfdom.format(sqldom);
						System.out.println("Details of " + name + " are: ");
						System.out.println("Name: " + sname);
						System.out.println("Address: " + saddress);
						System.out.println("Gender: " + sgender);
						System.out.println("Date of Birth: " + sdob);
						System.out.println("Date of Joining: " + sdoj);
						System.out.println("Date of Marriage: " + sdom);
					} else {
						System.out.println("No record found for the name: " + name);
					}

				}
			}

		} catch (SQLException se) {
			se.printStackTrace();
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			JdbcUtil.closeJdbcConnection(connection, pstmt, resultSet);
			if (scanner != null) {
				scanner.close();
			}
			if (pstmt != null) {
				pstmt.close();
			}

		}

	}

}

--------------
* Assignment 4(c)
Perform CRUD operation using PreparedStatement
   1. insert 2. update 3. select 4. delete
 */

package assignment4c;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Scanner;

public class JDBCCrudOperation {

	@SuppressWarnings("resource")
	public static void main(String[] args) throws SQLException {

		Connection connection = null;
		PreparedStatement pstmt = null;
		ResultSet resultSet = null;
		Scanner scanner = null;

		try {
			connection = JdbcUtil.getJdbcConnection();
			scanner = new Scanner(System.in);
			System.out.println("Enter the DB operation you want to perform:");
			System.out.println("1 - Create");
			System.out.println("2 - Read");
			System.out.println("3 - Update");
			System.out.println("4 - Delete");
			int choice = scanner.nextInt();

			if (connection != null & choice == 1) {
				System.out.println("::You have selected CREATE operation::");
				System.out.print("Enter accno: ");
				int saccno = scanner.nextInt();
				System.out.print("Enter firstname: ");
				String sfirstname = scanner.next();
				System.out.print("Enter lastname: ");
				String slastname = scanner.next();
				System.out.print("Enter bal: ");
				int sbal = scanner.nextInt();

				pstmt = connection.prepareStatement(
						"insert into account(`accno`, `lastname`, `firstname`, `bal`) values(?, ?, ?, ?)");
				pstmt.setInt(1, saccno);
				pstmt.setString(2, slastname);
				pstmt.setString(3, sfirstname);
				pstmt.setInt(4, sbal);

				int executeUpdate = pstmt.executeUpdate();
				System.out.println("Number of rows affected is: " + executeUpdate);
			}

			if (connection != null & choice == 2) {
				System.out.println("::You have selected READ operation::");
				System.out.print("Enter the account number of the customer: ");
				int saccno = scanner.nextInt();

				pstmt = connection.prepareStatement(
						"select `accno`, `lastname`, `firstname`, `bal` from account where `accno`=?");

				pstmt.setInt(1, saccno);
				resultSet = pstmt.executeQuery();
				if (resultSet.next()) {
					System.out.println("AccNo\tLName\tFName\tBal");
					System.out.println("---------------------------");
					System.out.println(resultSet.getInt(1) + "\t" + resultSet.getString(2) + "\t"
							+ resultSet.getString(3) + "\t" + resultSet.getInt(4));
				} else {
					System.out.println("No record found for the accno: " + saccno);
				}

			}

			if (connection != null & choice == 3) {
				System.out.println("::You have selected UPDATE operation::");
				System.out.print("Enter the Acc no. of the customer you want to update the balance: ");
				int saccno = scanner.nextInt();
				System.out.print("Enter the new balance: ");
				int sbal = scanner.nextInt();
				pstmt = connection.prepareStatement("update account set `bal`=? where `accno`=?");
				pstmt.setInt(1, sbal);
				pstmt.setInt(2, saccno);
				int executeUpdate = pstmt.executeUpdate();
				System.out.println("Number of rows affected is: " + executeUpdate);

			}

			if (connection != null & choice == 4) {
				System.out.println("::You have selected DELETE operation::");
				System.out.print("Enter the Acc no. of the customer you want to delete: ");
				int saccno = scanner.nextInt();
				pstmt = connection.prepareStatement("delete from account where `accno`=?");
				pstmt.setInt(1, saccno);
				int executeUpdate = pstmt.executeUpdate();
				System.out.println("Number of rows affected is: " + executeUpdate);
			}

			if (connection != null & (choice > 4 | choice <= 0)) {
				System.out.println("You have chosed wrong option");
			}
			System.out.println("Thank you for using this application :)");

		}

		finally {
			JdbcUtil.closeJdbcConnection(connection, pstmt, resultSet);
			if (scanner != null) {
				scanner.close();
			}
		}

	}

}
